# .github/workflows/main-pipeline.yml
name: Main Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

# Set permissions so CodeQL can upload results to the Security tab
permissions:
  contents: read
  security-events: write

jobs:
  ######################
  # 1) Quality Checks  #
  ######################
  quality-checks:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18.x'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run ESLint
        run: npm run lint

      - name: Check types
        run: npm run type-check

      - name: Run tests
        run: npm run test -- --coverage

      - name: Upload coverage reports
        uses: codecov/codecov-action@v3
        # For public repos you usually don't need a token;
        # If you do, uncomment and set your secret:
        # with:
        #   token: ${{ secrets.CODECOV_TOKEN }}

  #######################
  # 2) Security Scanning #
  #######################
  security-scan:
    name: Security Scan
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      # CodeQL requires init + analyze steps for a full scan
      - name: Initialize CodeQL
        uses: github/codeql-action/init@v2
        with:
          # Analyze both Python (.py) and JS/TS (.ts, .tsx)
          languages: 'python,javascript-typescript'
          # If you have a custom build, set build-mode: 'manual'
          # and add your build commands below before analyze

      # OPTIONAL: If your JS/TS or Python project needs a build step,
      # run it here (e.g., npm ci, python setup.py, etc.)
      - name: Build (if needed)
        run: npm ci
        # Or run any Python build commands if applicable

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v2

      # Snyk scan after CodeQL so both can run in the same job
      - name: Run Snyk to check for vulnerabilities
        uses: snyk/actions/node@v2
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
